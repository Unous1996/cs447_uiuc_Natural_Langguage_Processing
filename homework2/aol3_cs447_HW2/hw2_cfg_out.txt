########################################
### Sentence 1: 4 parses
### <There is no asbestos in our products now .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('EX_P', [Tree('EX', ['There']), Tree('VBZ', ['is'])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['no']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['asbestos'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['our'])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['products'])])])])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('EX_P', [Tree('EX', ['There']), Tree('VBZ', ['is'])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['no']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['asbestos'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('PRPX', ['our']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['products'])])])])])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('EX_P', [Tree('EX', ['There']), Tree('VBZ', ['is'])]), Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['asbestos'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['our'])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['products'])])])])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('EX_P', [Tree('EX', ['There']), Tree('VBZ', ['is'])]), Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['asbestos'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('PRPX', ['our']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['products'])])])])])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 2: 10 parses
### <It has no bearing on our work force today .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['our'])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('PRPX', ['our']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['no']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['our'])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['no']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('PRPX', ['our']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['our'])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('PRPX', ['our']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['no']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['our'])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['no']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('PRPX', ['our']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['our'])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('DT', ['no']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['bearing'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('PRPX', ['our']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['work']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['force']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['today'])])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 3: 2 parses
### <Champagne and dessert followed .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Champagne'])])]), Tree('CC', ['and']), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['dessert'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['followed'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Champagne'])])])])])])]), Tree('CC', ['and']), Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['dessert'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['followed'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 4: 4 parses
### <But Mr. Barnum called that a worst-case scenario .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['But']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Barnum'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['called'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['that']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('DT', ['a'])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['worst-case'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['scenario'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['But']), Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Barnum'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['called'])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['that']), Tree('Noun_Phrase', [Tree('DT', ['a']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['worst-case'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['scenario'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['But']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Barnum'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['called'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['that']), Tree('Noun_Phrase', [Tree('DT', ['a']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['worst-case'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['scenario'])])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('CC', ['But']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Barnum'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['called'])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['that']), Tree('Noun_Phrase', [Tree('DT', ['a']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['worst-case'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['scenario'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 5: 3 parses
### <All came from Cray Research .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('DT', ['All'])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['came'])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['from']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Cray'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Research'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('DT', ['All'])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['came'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['from']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Cray'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Research'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('DT', ['All'])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['came'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['from']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Cray'])])])])])])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Research'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 6: 3 parses
### <No price for the new shares has been set .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['No']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['price'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['for']), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['new'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['shares'])])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBZ', ['has'])]), Tree('VBN', ['been']), Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['No']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['price'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['for']), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['new'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['shares'])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBZ', ['has'])]), Tree('VBN', ['been']), Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('DT', ['No']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['price'])])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['for']), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['new'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['shares'])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBZ', ['has'])]), Tree('VBN', ['been']), Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 7: 4 parses
### <The computers were crude by today 's standards .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['computers'])])])])])])])])]), Tree('Have_Had', [Tree('VBD', ['were'])]), Tree('Predictive', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['crude'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('Normal_Single_Noun', [Tree('NN', ['today'])]), Tree('POS', ["'s"])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['standards'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['computers'])])])])])])])])])]), Tree('Have_Had', [Tree('VBD', ['were'])]), Tree('Predictive', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['crude'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('Normal_Single_Noun', [Tree('NN', ['today'])]), Tree('POS', ["'s"])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['standards'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['computers'])])])])])])])])]), Tree('Have_Had', [Tree('VBD', ['were'])]), Tree('Predictive', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['crude'])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('Normal_Single_Noun', [Tree('NN', ['today'])]), Tree('POS', ["'s"])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['standards'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['computers'])])])])])])])])])]), Tree('Have_Had', [Tree('VBD', ['were'])]), Tree('Predictive', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['crude'])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('Normal_Single_Noun', [Tree('NN', ['today'])]), Tree('POS', ["'s"])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['standards'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 8: 1 parses
### <There were many pioneer PC contributors .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('EX_P', [Tree('EX', ['There']), Tree('VBD', ['were'])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['many'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['pioneer']), Tree('Noun_NP_Singular_Many', [Tree('NN', ['PC'])])]), Tree('NNS', ['contributors'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 9: 1 parses
### <Esso said the Whiting field started production Tuesday .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Esso'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['said'])])])])])]), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Whiting'])])])])])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['field'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['started'])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['production'])])])]), Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Tuesday'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 10: 4 parses
### <The rest went to investors from France and Hong Kong .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['rest'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['went'])])])]), Tree('TO', ['to'])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['investors'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['from']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Hong'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Kong'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['rest'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['went'])])])]), Tree('TO', ['to'])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['investors'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['from']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Hong'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Kong'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['rest'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['went'])])])]), Tree('TO', ['to'])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['investors'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['from']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Hong'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Kong'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['rest'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['went'])])])]), Tree('TO', ['to'])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['investors'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['from']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Hong'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Kong'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 11: 2 parses
### <They fell into oblivion after the 1929 crash .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['They']), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['fell'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['into']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['oblivion'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['after']), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('CD', ['1929'])])])])])])])])])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['crash'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['They']), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['fell'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['into']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['oblivion'])])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['after']), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('CD', ['1929'])])])])])])])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['crash'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 12: 2 parses
### <Factory payrolls fell in September .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Factory'])]), Tree('NNS', ['payrolls'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['fell'])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['September'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Factory'])]), Tree('NNS', ['payrolls'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['fell'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['September'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 13: 1 parses
### <It 's imaginative and often funny .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['It']), Tree('Have_Had', [Tree('VBZ', ["'s"])]), Tree('Predictive', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['imaginative']), Tree('CC', ['and']), Tree('JJ_POS', [Tree('RB', ['often']), Tree('JJ', ['funny'])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 14: 1 parses
### <South Korea has different concerns .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['South'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Korea'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['has'])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['different'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['concerns'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 15: 6 parses
### <And the nose on Mr. Courter 's face grows .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('CC', ['And']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['nose'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Courter'])])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['face'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['grows'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('CC', ['And']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['the']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['nose'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Courter'])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['face'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['grows'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('CC', ['And']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['nose'])])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Courter'])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['face'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['grows'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['And']), Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['nose'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Courter'])])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['face'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['grows'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['And']), Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['the']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['nose'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Courter'])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['face'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['grows'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['And']), Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['nose'])])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Mr.'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Courter'])])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['face'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['grows'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 16: 1 parses
### <Her immediate predecessor suffered a nervous breakdown .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('PRPX', ['Her']), Tree('JJ_POS', [Tree('JJ', ['immediate'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['predecessor'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['suffered'])])])])])]), Tree('Noun_Phrase', [Tree('DT', ['a']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['nervous'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['breakdown'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 17: 1 parses
### <Pressures began to build .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['Pressures'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['began'])])])]), Tree('To_Verb', [Tree('TO', ['to']), Tree('VB', ['build'])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 18: 2 parses
### <But Learning Materials matched on 66.5 of 69 subskills .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['But']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Learning'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNPS', ['Materials'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['matched'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('CD', ['66.5'])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('CD', ['69'])])])])])])])])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['subskills'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('CC', ['But']), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Learning'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNPS', ['Materials'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['matched'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['on']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('CD', ['66.5'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('CD', ['69'])])])])])])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['subskills'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 19: 1 parses
### <Viacom denies it 's using pressure tactics .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Viacom'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ['denies'])])])])])])]), Tree('S_COMPLETE', [Tree('PRP', ['it']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('VBZ', ["'s"]), Tree('VBG', ['using'])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['pressure'])]), Tree('NNS', ['tactics'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 20: 6 parses
### <The business had been handled by VanSant Dugdale , Baltimore .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['business'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBD', ['had'])]), Tree('VBN', ['been']), Tree('VBN', ['handled'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['VanSant'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Dugdale'])])])]), Tree('COMMA', [',']), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['business'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBD', ['had'])]), Tree('VBN', ['been']), Tree('VBN', ['handled'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['VanSant'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Dugdale'])])])]), Tree('COMMA', [',']), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['business'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBD', ['had'])]), Tree('VBN', ['been']), Tree('VBN', ['handled'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['VanSant'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Dugdale'])])])]), Tree('COMMA', [',']), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['business'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBD', ['had'])]), Tree('VBN', ['been']), Tree('VBN', ['handled'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['VanSant'])]), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Dugdale'])])])]), Tree('COMMA', [',']), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['business'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBD', ['had'])]), Tree('VBN', ['been']), Tree('VBN', ['handled'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['VanSant'])])])])])])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['business'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Have_Had', [Tree('VBD', ['had'])]), Tree('VBN', ['been']), Tree('VBN', ['handled'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['by']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['VanSant'])])])])])])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 21: 1 parses
### <Terms were n't disclosed .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['Terms'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['were'])])])]), Tree('RB', ["n't"]), Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBN', ['disclosed'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 22: 12 parses
### <France can boast the lion 's share of high-priced bottles .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('DT', ['the'])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['the']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])])]), Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['the']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])])]), Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('DT', ['the'])])])]), Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])]), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('Normal_Single_Noun', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])]), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('Normal_Single_Noun', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])]), Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])]), Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('Normal_Single_Noun', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('DT', ['the'])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['the']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('Proper_Block_The', [Tree('Proper_Block', [Tree('Proper_Cascade', [Tree('Proper_Single', [Tree('NNP', ['France'])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Mood_Verb', [Tree('MD', ['can']), Tree('VB', ['boast'])])])])])]), Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['the']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['lion'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBZ', ["'s"])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['share'])])])])])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['of']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['high-priced'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['bottles'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 23: 4 parses
### <The president understood but did n't agree despite overwhelming political pressure .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['president'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['understood'])])])])])])]), Tree('CC', ['but']), Tree('S_INCOMPLETE', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('VBD', ['did']), Tree('RB', ["n't"]), Tree('VB', ['agree'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['despite']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['overwhelming'])]), Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['political'])])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['pressure'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('DT', ['The']), Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['president'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['understood'])])])])])])]), Tree('CC', ['but']), Tree('S_INCOMPLETE', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['did'])])])]), Tree('RB', ["n't"]), Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VB', ['agree'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['despite']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['overwhelming'])]), Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['political'])])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['pressure'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['president'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['understood'])])])])])])]), Tree('CC', ['but']), Tree('S_INCOMPLETE', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('VBD', ['did']), Tree('RB', ["n't"]), Tree('VB', ['agree'])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['despite']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['overwhelming'])]), Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['political'])])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['pressure'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('DT', ['The']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['president'])])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['understood'])])])])])])]), Tree('CC', ['but']), Tree('S_INCOMPLETE', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['did'])])])]), Tree('RB', ["n't"]), Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VB', ['agree'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['despite']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['overwhelming'])]), Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['political'])])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['pressure'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 24: 4 parses
### <Stock prices rose fractionally in moderate trading .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Stock'])]), Tree('NNS', ['prices'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['rose'])])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('RB', ['fractionally']), Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['moderate'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['trading'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Stock'])]), Tree('NNS', ['prices'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['rose'])])])]), Tree('RB', ['fractionally'])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['moderate'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['trading'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Stock'])]), Tree('NNS', ['prices'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['rose'])])])])])]), Tree('Prep_Phrase_With_Adverb', [Tree('RB', ['fractionally']), Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['moderate'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['trading'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['Stock'])]), Tree('NNS', ['prices'])])])])])])])])]), Tree('Verb_Phrase', [Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBD', ['rose'])])])]), Tree('RB', ['fractionally'])])]), Tree('Prep_Phrase_With_Adverb', [Tree('Prep_Phrase', [Tree('IN', ['in']), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('Noun_Modifier', [Tree('JJ_POS', [Tree('JJ', ['moderate'])])]), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Singular_Many', [Tree('NN', ['trading'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 25: 2 parses
### <They operate ships and banks .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['They']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBP', ['operate'])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['ships'])])]), Tree('CC', ['and']), Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['banks'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S_COMPLETE', [Tree('PRP', ['They']), Tree('Verb_Phrase', [Tree('Verb_Adverb_Block', [Tree('Verb_Block', [Tree('Non_To_Verb', [Tree('Normal_Single_Verb', [Tree('VBP', ['operate'])])])])])]), Tree('Noun_Phrase', [Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['ships'])])])])])])]), Tree('CC', ['and']), Tree('All_Noun_Block_Connect', [Tree('All_Noun_Block', [Tree('All_S_Noun_Block', [Tree('All_NPP_Noun_Block', [Tree('All_NP_Noun_Block', [Tree('All_NP_Noun_Word', [Tree('Noun_NP_Plural_End', [Tree('NNS', ['banks'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
